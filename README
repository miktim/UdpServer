# UdpSocket, MIT (c) 2019,2021 miktim@mail.ru
  UDP broadcast/unicast/multicast sender/receiver
  
  Release notes:
    - don't forget to open the required udp port in your firewall;
    - created datagram sockets bind to port and specified bind address;
    - ipv4 addresses ending in .255 are considered broadcast;
    - multicast sockets are created with loopback disabled and one hop;
    - datagram sockets connect to addresses other than multicast and broadcast;
    - DO NOT disable datagram socket timeout.

  Overview:

    Constructors:
      UdpSocket(int port) throws IOException; // broadcast datagram socket
      UdpSocket(int port, InetAddress inetAddr) throws IOException;
      UdpSocket(int port, InetAddress inetAddr, InetAddress bindAddr) throws IOException;

    Methods:
      static void enableReuseAddress(boolean nullSocketRequired); // disabled by default
        // Note: nullSocketRequired must be true for Windows (Oracle Java) and Linux (Open Java), false - for Android (Dalvik)
      static void disableReuseAddress();
      
      void send(byte[] buf) throws IOException;
      void setBufferLength(int length); // set the buffer length of incoming datagrams
      int getBufferLength();
      void receive(UdpSocket.handler handler); // start receiving
      void close(); // stop receiving, close datagram socket
      boolean isOpen(); 
      boolean isReceiving();
      boolean isMulticast();
      boolean isBroadcast();
      InetAddress getInetAddress(); // returns inetAddr parameter
      DatagramSocket getSocket();

    UdpSocket.Handler:
      void onStart(UdpSocket socket);
      void onPacket(UdpSocket socket, DatagramPacket packet);
      void onError(UdpSocket socket, Exception e);
      void onClose(UdpSocket socket); // called BEFORE closing the datagram socket
